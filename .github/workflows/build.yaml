name: Push Docker images
on:
  #schedule:
  #  - cron:  '30 5,17 * * *'
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'hub/*'
  
jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GitLab
        id: login_to_gitlab
        uses: docker/login-action@v3
        with:
          registry: registry.gitlab.com
          username: ${{ vars.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_PASSWORD }}
        continue-on-error: true

      - name: check gitlab login
        shell: bash
        run: |
          if [[ ${{ steps.login_to_gitlab.outcome }} == "success" ]]; then 
            echo "PUSH_TO_GITLAB=yes" >> "$GITHUB_OUTPUT"
          fi
          
      - name: pull and push images
        shell: bash
        run: |
          dirs="hub"
          pushed_dir="pushed"
          readme="README.md"
          cat _README.md > $readme
          echo ${PUSH_TO_GITLAB}
          for dir in $dirs; do
              for _file in $(ls $dir); do
                  image_file="$dir/$_file"
                  pushed_file="$pushed_dir/$_file"
                  image=$(head -n 1 $image_file | tr -d '[:space:]')
                  image_tag=$(echo $image|awk -F ':' '{print $2}')
                  pushed_tag="a-fake-tag-fb5ebbe64a7f1d6c7686"

                  if [[ -f "$pushed_file" ]]; then
                      pushed_tag=$(head -n 1 $pushed_file | tr -d '[:space:]'|awk -F ':' '{print $2}')
                  fi
                  if [[ "$image_tag" != "$pushed_tag" ]]; then
                      echo 'not pushed yet, now pushing.'
                      docker pull $image
                      docker tag $image ghcr.io/${GITHUB_REPOSITORY_OWNER}/$image
                      docker push ghcr.io/${GITHUB_REPOSITORY_OWNER}/$image
                      echo "ghcr.io/${GITHUB_REPOSITORY_OWNER}/$image" > $pushed_file
                  else
                      echo "$image pushed."
                  fi
                  
                  image_name=$(echo $image|awk -F ':' '{print $1}')
                  echo "- $image_name" >> $readme
                  echo '```ruby' >> $readme
                  echo "docker pull $(cat $pushed_file)" >> $readme
                  echo '```' >> $readme
                  echo "" >> $readme
              done
          done

      - name: apply changes to repo
        uses: stefanzweifel/git-auto-commit-action@v5

    
